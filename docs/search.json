{
  "articles": [
    {
      "path": "about.html",
      "title": "About this site",
      "description": "Some additional details about the website",
      "author": [],
      "contents": "\r\n\r\n\r\n\r\n",
      "last_modified": "2024-06-18T00:19:45-04:00"
    },
    {
      "path": "index.html",
      "title": "Weekly Walmart Sales Analysis",
      "description": "Utilizing SQL, R, and Python to analyze Walmart sales.\n",
      "author": [],
      "contents": "\r\nWelcome\r\nThis project is currently being re-written. There are major changes in progress. First, I am looking to include more statistical analysis on how sales correlate with every factor, which means that the code and analysis of insights will be updated on a daily basis. Second, I am changing the format of this report to be more similar to a business case study. Thus, sections are being reorganized and contain imperfect writing. Third, because of the following changes, the beautification of charts and tables are currently not the main priority. Please proceed with this in mind.\r\nFor a more polished (but less relevant and more informal case study) to showcase my data analysis skills and interest in psychology, please click here!\r\nIntroduction\r\nThis project focuses on analyzing raw data from this dataset, which tracks the weekly sales of 45 Walmart stores over 2 years! It also tracks external factors like whether the week contained a holiday, the CPI, and the unemployment rate of the region.\r\nFirst, the data is cleaned using pandas as we want to make sure that this data is easy to deal with. The primary goal of cleaning is to standardize the data by rounding values and removing missing values.\r\n\r\n\r\nShow Python code\r\n#import \r\nimport pandas as pd\r\ndf = pd.read_csv('Walmart_sales.csv', parse_dates=['Date'], dayfirst=False)\r\n\r\n#sort by store number and then date\r\ndf.sort_values(by=['Store', 'Date'])\r\n\r\n#standarize dates to mm-dd-yyyy\r\ndf['Date'] = pd.to_datetime(df['Date'], format='%d-%m-%Y').dt.strftime('%m-%d-%Y')\r\n\r\n#rounding data \r\ndf.round({'Weekly_Sales':2, 'Temperature':0, 'Fuel_Price':2, 'CPI':3, 'Unemployment':3})\r\n\r\n#removing missing values\r\ndf.dropna\r\n\r\n#create cleaned csv\r\ndf.to_csv('./WalmartSalesClean.csv')\r\n\r\nAfter cleaning, the data appears like so:\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nAnalysis\r\nNow that the data has been cleaned, we can use SQL and R to explore this data.\r\nWhich holidays affect weekly sales the most?\r\nHolidays are notorious for driving up sales as Walmart often runs promotional markdown events to incentivize purchases!\r\n\r\n\r\n\r\n\r\nThe (repeating) holidays that appear in this data are:\r\nSuper Bowl (Feb 9th)\r\nLabor Day (Sept 10th)\r\nThanksgiving (Nov 26th)\r\nChristmas and Hanukkah (Dec 31th)\r\nWith these holidays, it is implied that the curator of data would have been American, and this data could’ve been taken from American stores. However, the geographical location of these stores are not contained within the dataset.\r\nFirst, the days had the highest profit should be examined:\r\n\r\n\r\nShow SQL code\r\nALTER TABLE WalmartSalesClean\r\nALTER COLUMN Holiday_Flag Int;\r\n\r\n --filtering for holiday flags and sorting \r\nSELECT Date, SUM(CAST(Weekly_Sales AS FLOAT)) AS Weekly_Sales\r\nFROM WalmartSalesClean \r\nWHERE Holiday_Flag='1'\r\nGROUP BY Date\r\nORDER BY Weekly_Sales DESC;\r\n\r\n\r\n\r\n\r\n\r\nIt seems like Thanksgiving (for all stores) consistently ranks the highest amongst all the holidays. To be more accurate, the total sales per holiday can be extracted.\r\n\r\n\r\nShow SQL code\r\nSELECT \r\nCASE \r\nWHEN Holiday = 02 THEN 'Super Bowl' --changing months to holiday names\r\nWHEN Holiday = 09 THEN 'Labor Day'\r\nWHEN Holiday = 11 THEN 'Thanksgiving'\r\nWHEN Holiday = 12 THEN 'Christmas'\r\nEND AS Holiday, SUM(Weekly_Sales) AS Weekly_Sales\r\n    FROM (  --subquery to have two GROUP BY statements \r\n    SELECT SUBSTRING (DATE, 1, 2) AS Holiday, SUM(CAST(Weekly_Sales AS FLOAT)) AS Weekly_Sales \r\n    FROM WalmartSalesClean \r\n    WHERE Holiday_Flag='1'\r\n    GROUP BY Date\r\n    ) AS temptable \r\nGROUP BY Holiday --Summarizing and reordering data \r\nORDER BY Weekly_Sales DESC\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nDespite Thanksgiving dominating the upper echelons of highest individual store profit, it seems like people spend the most on the Super Bowl! This could be caused by the cultural significance of Thanksgiving, where it “symbolizes intercultural peace, America’s opportunity for newcomers, and the sanctity of home and family”.1 However, I am more inclined to believe that Thanksgiving is typically used as an opportunity to invite all your friends and family and spend the entire day cooking – that means food costs can balloon quickly!\r\nWhich stores have the lowest and highest unemployment rate?\r\n\r\n\r\nShow SQL code\r\n-- highest unemployment rate \r\nSELECT TOP 6 Store, avg(CAST(Unemployment AS decimal)) AS Unemployment, avg(CAST(Weekly_Sales AS decimal)) AS Weekly_Sales\r\nFROM WalmartSalesClean\r\nGROUP BY Store\r\nORDER BY Unemployment desc, Weekly_Sales desc -- need to use weekly sales as a parameter as stores may have the same unemployment rate\r\n\r\n\r\n\r\nTable 1: Highest Unemployment\r\n\r\n\r\nStore\r\n\r\n\r\nUnemployment\r\n\r\n\r\nWeekly_Sales\r\n\r\n\r\n12\r\n\r\n\r\n13.116483\r\n\r\n\r\n1009001.6\r\n\r\n\r\n28\r\n\r\n\r\n13.116483\r\n\r\n\r\n1323522.2\r\n\r\n\r\n38\r\n\r\n\r\n13.116483\r\n\r\n\r\n385731.7\r\n\r\n\r\n34\r\n\r\n\r\n9.934804\r\n\r\n\r\n966781.6\r\n\r\n\r\n43\r\n\r\n\r\n9.934804\r\n\r\n\r\n633324.7\r\n\r\n\r\n29\r\n\r\n\r\n9.806385\r\n\r\n\r\n539451.4\r\n\r\n\r\n\r\n\r\nShow SQL code\r\n-- lowest unemployment rate\r\nSELECT TOP 6 Store, avg(CAST(Unemployment AS decimal)) AS Unemployment, avg(CAST(Weekly_Sales AS decimal)) AS Weekly_Sales\r\nFROM WalmartSalesClean\r\nGROUP BY Store\r\nORDER BY Unemployment, Weekly_Sales desc\r\n\r\n\r\n\r\nTable 2: Lowest Unemployment\r\n\r\n\r\nStore\r\n\r\n\r\nUnemployment\r\n\r\n\r\nWeekly_Sales\r\n\r\n\r\n23\r\n\r\n\r\n4.796014\r\n\r\n\r\n1389864.5\r\n\r\n\r\n40\r\n\r\n\r\n4.796014\r\n\r\n\r\n964128.0\r\n\r\n\r\n4\r\n\r\n\r\n5.964692\r\n\r\n\r\n2094713.0\r\n\r\n\r\n8\r\n\r\n\r\n6.091846\r\n\r\n\r\n908749.5\r\n\r\n\r\n9\r\n\r\n\r\n6.099881\r\n\r\n\r\n543980.6\r\n\r\n\r\n5\r\n\r\n\r\n6.295406\r\n\r\n\r\n318011.8\r\n\r\n\r\nInterestingly, there’s not a strong correlation between high unemployment and low weekly sales. I’d expect that places with higher unemployment meant that consumers had less disposable income to spend at Walmart. But, Walmart is known for having super cheap products and consumers could’ve primarily bought inelastic goods and other necessities.\r\nIt could also be that Walmart’s penetration pricing worked too well. Walmart is notorious for significantly impacting the local economy of the neighborhood, positively and negatively. On one hand, low prices means that consumers can afford more things in a one-stop location and stores near the Walmart get more business due to the influx of foot traffic. On the other, Walmart is known for hiring many workers and paying minimum wage, as well as displacing small businesses due to their low prices (and subsequently, small profit margins) with their pricing. These margins are things that only large corporations can withstand, while small businesses simply can’t afford to compete.\r\nThe positive and negative effects differ depending on the neighborhood that Walmart enters, with this data being a good example of the impacts that Walmart can have.\r\nIt should also be noted that this data comes from 2010 - 2012 – aftermath of the Great Recession. Pre-recession, unemployment was at 4.7% in America. However, between 2010 - 2012, unemployement was at a high of 9.8% in January of 2009 and decreased until reaching a low of 7.7% in November 2012.2\r\nSample Pearson Correlation\r\nWe can also use statistics to back up these claims by checking the correlation between weekly sales and other factors. This gives us insight into the relationship between each of the variables.\r\nThe sample Pearson correlation coefficient was used to determine whether there was a linear correlation between the two sets of data. The coefficient ranges from \\(-1\\) \\(\\le\\) \\(r_{X,Y}\\) \\(\\le\\) \\(1\\), where \\(-1\\) means a perfect negative linear relationship (as weekly sales go up, the other variable goes down) and \\(1\\) means a perfect positive linear relationship (as weekly sales go up, the other variable goes up.)\r\nSubsequently:\r\nif \\(r_{X,Y}\\) \\(\\ge\\) \\(0\\), the variables have a positive relationship.\r\n\\(r_{X,Y}\\) \\(\\le\\) \\(0\\), the variables have a negative relationship.\r\nBased on the above analysis, the following relationships are predicted:\r\nWeekly sales and holiday: \\(r_{X,Y}\\) \\(\\ge\\) \\(0\\)\r\nWeekly sales and unemployment: \\(r_{X,Y}\\) \\(\\le\\) \\(0\\)\r\nWeekly sales and CPI: \\(r_{X,Y}\\) \\(\\ge\\) \\(0\\)\r\nWeekly sales and fuel price: \\(r_{X,Y}\\) \\(\\ge\\) \\(0\\)\r\nWeekly sales and temperature: \\(r_{X,Y}\\) \\(\\ge\\) \\(0\\)\r\nThe following formula will be used:\r\n\\(r_{xy}={\\frac {n\\sum x_{i}y_{i}-\\sum x_{i}\\sum y_{i}}{\\sqrt{(n\\sum x^2 - \\sum x \\sum x)(n\\sum y^2 - \\sum y \\sum y)}}}\\)\r\nwhere \\(x\\) is Weekly_Sales, and \\(y\\) the variable we want to test the correlation of.\r\nThe sample Pearson correlation coefficient calculated is:\r\n\r\n\r\nShow SQL code\r\n-- calculating the Pearson coefficient for weekly sales and unemployment. Replacing the y value (in this case, unemployment) with the other factors would yield the coefficient for that specific factor \r\n\r\nWITH rdata AS (\r\nSELECT CAST(Unemployment AS decimal) AS Unemployment, CAST(Weekly_Sales AS decimal) AS Weekly_Sales\r\nFROM WalmartSalesClean\r\n),\r\n\r\nrawdata AS ( -- calculating expectation \r\nSELECT Unemployment AS x, Weekly_Sales AS y, Unemployment*Weekly_Sales AS xy, Unemployment*Unemployment AS xsquared, Weekly_Sales*Weekly_Sales AS ysquared  \r\nFROM rdata\r\n),\r\n\r\npdata AS ( -- reorganizing data \r\nSELECT SUM(x) AS sumx, SUM(y) AS sumy, SUM(xy) as sumxy, SUM(xsquared) as sumx2, SUM(ysquared) as sumy2, COUNT(x) as n\r\nFROM rawdata\r\n)\r\n\r\n--- covariance(xy) / (std. dev. x) * (std. dev. y)\r\nSELECT (n*sumxy - sumx * sumy) / (sqrt((n*sumx2 - sumx*sumx)*(n*sumy2 - sumy*sumy))) AS \"Pearson's Correlation\"\r\nFROM pdata\r\n\r\n\r\n\r\n\r\n\r\nPoint-biserial Correlation Coefficient\r\nFor Holiday_Flag, we need to use a point-biserial correlation coefficient instead of the Pearson correlation coefficent. This is because Holiday_Flag is a dichotomous variable (values can only be 1 or 0 to symbolize yes/no) compared Weekly Sales, which is not a dichotomous variable (values can be any number).\r\nAlthough you can use Pearson’s with dichotomous variables, the usefulness of the correlation would be debatable since it’s not meant to be utilized with dichotomous variables. Hence, it’s best to use a point-biserial, as it is equivalent to the Pearson correlation coefficient.3\r\nWe will be using the following formula:\r\n\\({r_{pb}={\\frac {M_{1}-M_{0}}{s_{n}}}{\\sqrt {\\frac {n_{1}n_{0}}{n^{2}}}}}\\)\r\nwhere:\r\n\\(M_1\\) = Mean weekly sales when the Holiday_Flag = 1\\(M_0\\) = Mean weekly sales when the Holiday_Flag = 0\\(s_n\\) = Standard deviation of weekly sales\\(n_1\\) = Number of data points where Holiday_Flag = 1\\(n_2\\) = Number of data points where Holiday_Flag = 0\\(n\\) = Total number of data points in the sample\r\n\r\n\r\nShow SQL code\r\n\r\n--grabbing avg weekly sales for holiday / no holiday\r\nWITH meanflag AS ( \r\nSELECT Holiday_Flag, avg(CAST(Weekly_Sales AS decimal)) AS Avg_Weekly_Sales\r\nFROM WalmartSalesClean\r\nGROUP BY Holiday_Flag\r\n), \r\n\r\n-- grabbing number of holiday / no holiday days\r\ncountflag AS ( \r\nSELECT Holiday_Flag, count(Holiday_Flag) AS n_Holiday_Flag\r\nFROM WalmartSalesClean\r\nGROUP BY Holiday_Flag\r\n),\r\n\r\n-- combining it into one table\r\njoinmeancount AS ( \r\nSELECT meanflag.Holiday_Flag, meanflag.Avg_Weekly_Sales, countflag.n_Holiday_Flag\r\nFROM meanflag\r\nINNER JOIN countflag\r\n    ON countflag.Holiday_Flag = meanflag.Holiday_Flag\r\n),\r\n\r\n-- adding standard deviation and total count of weekly sales\r\njoinstdn AS ( \r\nSELECT STDEV(CAST(Weekly_Sales AS decimal)) AS sn, count(Weekly_Sales) as n, \r\n(SELECT n_Holiday_Flag FROM joinmeancount WHERE Holiday_Flag = 1) AS n1, \r\n(SELECT n_Holiday_Flag FROM joinmeancount WHERE Holiday_Flag = 0) AS n0, \r\n(SELECT Avg_Weekly_Sales FROM joinmeancount WHERE Holiday_Flag = 1) AS m1,\r\n(SELECT Avg_Weekly_Sales FROM joinmeancount WHERE Holiday_Flag = 0) AS m0\r\nFROM WalmartSalesClean\r\n)\r\n\r\n-- calculating correlation, need to convert into floats for division\r\nSELECT ((m1-m0)/sn) * SQRT((CAST(n1 * n0 AS FLOAT)) / (CAST(n * n AS FLOAT))) AS r_pb \r\nFROM joinstdn\r\n\r\nwhich results in an \\(r_pb\\) value of ~ 0.037 – a slight positive correlation.\r\n\r\n\r\n\r\n\r\nWhen analyzing these relationships, it seems like only Holiday and Unemployment follow the expected prediction.\r\nHow do Weekly Sales Vary by Store and by Year?\r\nLet’s start by separately analyzing weekly sales.\r\nFirst, we can look at which stores are the most profitable.\r\n\r\n\r\n\r\nIt seems like store 33, 44, and 5 have the least amount of sales, while store 20, 4, and 14 have the most.\r\nWe can also see how time and weekly sales affect each other.\r\n\r\n\r\n\r\nThere always seems to be a spike in December and a low in January.\r\n\r\n\r\nhttps://www.britannica.com/topic/Thanksgiving-Day↩︎\r\nhttps://www.bls.gov/charts/employment-situation/civilian-unemployment-rate.htm↩︎\r\nhttps://en.wikipedia.org/wiki/Point-biserial_correlation_coefficient↩︎\r\n",
      "last_modified": "2024-06-18T00:19:45-04:00"
    }
  ],
  "collections": []
}
