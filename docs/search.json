{
  "articles": [
    {
      "path": "about.html",
      "title": "About this site",
      "description": "Some additional details about the website",
      "author": [],
      "contents": "\r\n\r\n\r\n\r\n",
      "last_modified": "2024-06-12T00:09:03-04:00"
    },
    {
      "path": "index.html",
      "title": "Phishing with SQL",
      "description": "Welcome to the website. I hope you enjoy it!\n",
      "author": [],
      "contents": "\r\nThis project focuses on analyzing raw data from this dataset, which tracks the weekly sales of 45 Walmart stores over 2 years! It also tracks external factors like whether the week contained a holiday, the CPI, and the unemployment rate of the region.\r\nFirst, the data is cleaned using pandas as we want to make sure that this data is easy to deal with. The primary goal of cleaning is to standardize the data by rounding values and removing missing values.\r\n\r\nimport pandas as pd\r\ndf = pd.read_csv('Walmart_sales.csv', parse_dates=['Date'], dayfirst=False)\r\n\r\n\r\n#sort by store number and then date\r\ndf.sort_values(by=['Store', 'Date'])\r\n\r\n#standarize dates to mm-dd-yyyy\r\ndf['Date'] = pd.to_datetime(df['Date'], format='%d-%m-%Y').dt.strftime('%m-%d-%Y')\r\n\r\n#rounding data \r\ndf.round({'Weekly_Sales':2, 'Temperature':0, 'Fuel_Price':2, 'CPI':3, 'Unemployment':3})\r\n\r\n#removing missing values\r\ndf.dropna\r\n\r\n#create cleaned csv\r\ndf.to_csv('./WalmartSalesClean.csv')\r\n\r\nAfter cleaning, the data appears like so:\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nLet’s answer a few questions about the data. We’ll be using SQL to clean and manipulate the data.\r\nWhich holidays affect weekly sales the most?\r\nHolidays are notorious for driving up sales as Walmart often runs promotional markdown events to incentivize purchases!\r\n\r\n\r\n\r\n\r\nThe (repeating) holidays that appear in this data are:\r\nSuper Bowl (Feb 9th)\r\nLabor Day (Sept 10th)1\r\nThanksgiving (Nov 26th)\r\nChristmas and Hanukkah (Dec 31TH)\r\n\r\nUsing SQL:\r\n\r\nALTER TABLE WalmartSalesClean\r\nALTER COLUMN Holiday_Flag Int;\r\n\r\n#filtering for holiday flags and sorting \r\nSELECT Date, SUM(CAST(Weekly_Sales AS FLOAT)) AS Weekly_Sales\r\nFROM WalmartSalesClean \r\nWHERE Holiday_Flag='1'\r\nGROUP BY Date\r\nORDER BY Weekly_Sales DESC;\r\n\r\n\r\n# A tibble: 450 × 2\r\n# Groups:   Date [10]\r\n   Date       Weekly_Sales\r\n   <chr>             <dbl>\r\n 1 11-25-2011     3004702.\r\n 2 11-25-2011     2950199.\r\n 3 11-26-2010     2939946.\r\n 4 11-26-2010     2921710.\r\n 5 11-25-2011     2906233.\r\n 6 11-25-2011     2864171.\r\n 7 11-26-2010     2811634.\r\n 8 11-26-2010     2789469.\r\n 9 11-26-2010     2766400.\r\n10 11-25-2011     2685352.\r\n# ℹ 440 more rows\r\n\r\nIt seems like Thanksgiving (for all stores) consistently ranks the highest amongst all the holidays!\r\nBut, this isn’t accurate enough for me – why separate it by year and day for EVERY single store? Thankfully, all our holidays are in different months, so we can retain the month in the date column and aggregating weekly sales by the holiday.\r\n\r\nWITH HOLIDAYDATE AS (\r\nSELECT SUBSTRING (DATE, 1, 2) AS Date, SUM(CAST(Weekly_Sales AS FLOAT)) AS Weekly_Sales\r\nFROM WalmartSalesClean \r\nWHERE Holiday_Flag='1'\r\nGROUP BY Date\r\n)\r\n\r\n#Re-aggregating by date \r\nSELECT Date, SUM(Weekly_Sales) AS Weekly_Sales\r\nFROM HOLIDAYDATE\r\nGROUP BY Date\r\nORDER BY Weekly_Sales DESC\r\n\r\n\r\n# A tibble: 4 × 2\r\n  Date  Weekly_Sales\r\n  <chr>        <dbl>\r\n1 02      145682278.\r\n2 09      140727685.\r\n3 11      132414608.\r\n4 12       86474980.\r\n\r\nDespite Thanksgiving dominating the upper echelons of highest individual store profit, it seems like people spend the most on the Super Bowl!\r\nadjust so that 02 is not displayed, but sintead, superbowl\r\nWhich stores in the dataset have the lowest and highest unemployment rate? What factors do you think are impacting the unemployment rate?\r\n\r\n\r\n\r\nWITH corrdata AS (\r\nSELECT Store, avg(CAST(Unemployment AS decimal)) AS Unemployment, avg(CAST(Temperature AS decimal)) AS Temperature, avg(CAST(Fuel_Price AS decimal)) AS Fuel_Prices, avg(CAST(CPI AS decimal)) AS CPI, avg(CAST(Weekly_Sales AS decimal)) AS Weekly_Sales\r\nFROM WalmartSalesClean\r\nGROUP BY Store\r\n/*ORDER BY Unemployment desc, Weekly_Sales \r\n\r\n  select(Date, Weekly_Sales) %>%\r\n  group_by(Date) %>%\r\n  arrange(desc(Weekly_Sales))*/\r\n\r\nPearson’s correlation\r\n\r\nrawdata AS (\r\nSELECT Unemployment AS x, Weekly_Sales AS y, Unemployment*Weekly_Sales AS xy, Unemployment*Unemployment AS xsquared, Weekly_Sales*Weekly_Sales AS ysquared  \r\nFROM corrdata\r\n),\r\n\r\npdata AS (\r\nSELECT SUM(x) AS sumx, SUM(y) AS sumy, SUM(xy) as sumxy, SUM(xsquared) as sumx2, SUM(ysquared) as sumy2, COUNT(x) as n\r\nFROM rawdata\r\n)\r\n\r\nSELECT (n*sumxy - sumx * sumy) / (sqrt((n*sumx2 - sumx*sumx)*(n*sumy2 - sumy*sumy))) AS \"Pearson's Correlation\"\r\nFROM pdata\r\n\r\nIs there any correlation between CPI and Weekly Sales? How does the correlation differ when the Holiday Flag is 0 versus when the Holiday Flag is 1?\r\n\r\n\r\n\r\nWITH rdata AS (\r\nSELECT CAST(ROUND(CPI, 0) AS INT) AS CPI, CAST(Weekly_Sales AS decimal) AS Weekly_Sales\r\nFROM WalmartSalesClean\r\nWHERE Holiday_Flag = 0\r\n),\r\n\r\ncorrdata AS(\r\nSELECT CPI, AVG(Weekly_Sales) AS Weekly_Sales\r\nFROM rdata\r\nGROUP BY CPI\r\n/*ORDER BY CPI ASC*/\r\n),\r\n\r\n\r\nrawdata AS (\r\nSELECT CPI AS x, Weekly_Sales AS y, CPI*Weekly_Sales AS xy, CPI*CPI AS xsquared, Weekly_Sales*Weekly_Sales AS ysquared  \r\nFROM corrdata\r\n),\r\n\r\npdata AS (\r\nSELECT SUM(x) AS sumx, SUM(y) AS sumy, SUM(xy) as sumxy, SUM(xsquared) as sumx2, SUM(ysquared) as sumy2, COUNT(x) as n\r\nFROM rawdata\r\n)\r\n\r\nSELECT (n*sumxy - sumx * sumy) / (sqrt((n*sumx2 - sumx*sumx)*(n*sumy2 - sumy*sumy))) AS \"Pearson's Correlation\"\r\nFROM pdata\r\n\r\n\r\nhttps://docs.google.com/spreadsheets/d/1JNzGqUo9HEn5WOKftEgcm94JddOK6G3_QW-UI4sFNUY/edit#gid=0\r\n\r\nNote that this data is American.↩︎\r\n",
      "last_modified": "2024-06-12T00:09:03-04:00"
    }
  ],
  "collections": []
}
